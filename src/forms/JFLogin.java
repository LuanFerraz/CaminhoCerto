package forms;

import atributos.atributos;
import bancodedados.criarConexao;
import java.awt.Toolkit;
import java.net.InetAddress;
import java.net.UnknownHostException;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.UIManager.LookAndFeelInfo;

public class JFLogin extends javax.swing.JFrame {
    
    private java.sql.Connection conexao;
     String login="", senha="";
    /** Creates new form login */
    public JFLogin() throws SQLException {
        initComponents();
        
        
         jTLogin.requestFocus();
        
        this.conexao = criarConexao.getConexao(); 
        
        
        //Muda o tema para Nimbus     
        try {
    for (LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
        if ("Nimbus".equals(info.getName())) {
            UIManager.setLookAndFeel(info.getClassName());
            SwingUtilities.updateComponentTreeUI(this);
            break;
        }
    }
} catch (Exception e) {
    // If Nimbus is not available, you can set the GUI to another look and feel.
}
         
          this.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/Imagens/iconcc.png")));
    }
    
   
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLLogo = new javax.swing.JLabel();
        jPLogin = new javax.swing.JPanel();
        jLLogin = new javax.swing.JLabel();
        jTLogin = new javax.swing.JTextField();
        jLSenha = new javax.swing.JLabel();
        jPSenha = new javax.swing.JPasswordField();
        jBEntrar = new javax.swing.JButton();
        jLBackground = new javax.swing.JLabel();
        jMMenu = new javax.swing.JMenuBar();
        jMCaminhoCerto = new javax.swing.JMenu();
        jMAjuda = new javax.swing.JMenuItem();
        jMSobre = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMSair = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("CaminhoCerto");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(null);

        jLLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/logocc.png"))); // NOI18N
        getContentPane().add(jLLogo);
        jLLogo.setBounds(300, 30, 90, 80);

        jPLogin.setOpaque(false);

        jLLogin.setText("Login:");

        jTLogin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTLoginKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTLoginKeyReleased(evt);
            }
        });

        jLSenha.setText("Senha:");

        jPSenha.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPSenhaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jPSenhaKeyReleased(evt);
            }
        });

        jBEntrar.setText("Entrar");
        jBEntrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEntrarActionPerformed(evt);
            }
        });
        jBEntrar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jBEntrarKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPLoginLayout = new javax.swing.GroupLayout(jPLogin);
        jPLogin.setLayout(jPLoginLayout);
        jPLoginLayout.setHorizontalGroup(
            jPLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPLoginLayout.createSequentialGroup()
                .addGroup(jPLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPLoginLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLLogin)
                            .addComponent(jLSenha))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPSenha, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE)
                            .addComponent(jTLogin, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPLoginLayout.createSequentialGroup()
                        .addContainerGap(137, Short.MAX_VALUE)
                        .addComponent(jBEntrar)))
                .addContainerGap())
        );
        jPLoginLayout.setVerticalGroup(
            jPLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPLoginLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLLogin)
                    .addComponent(jTLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jPSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLSenha))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBEntrar)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        getContentPane().add(jPLogin);
        jPLogin.setBounds(180, 120, 210, 100);

        jLBackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/blue_waves.jpg"))); // NOI18N
        getContentPane().add(jLBackground);
        jLBackground.setBounds(0, -30, 420, 330);

        jMCaminhoCerto.setText("CaminhoCerto");

        jMAjuda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Ajuda.png"))); // NOI18N
        jMAjuda.setText("Ajuda");
        jMAjuda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMAjudaActionPerformed(evt);
            }
        });
        jMCaminhoCerto.add(jMAjuda);

        jMSobre.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Sobre.png"))); // NOI18N
        jMSobre.setText("Sobre");
        jMSobre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMSobreActionPerformed(evt);
            }
        });
        jMCaminhoCerto.add(jMSobre);
        jMCaminhoCerto.add(jSeparator1);

        jMSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/exit.png"))); // NOI18N
        jMSair.setText("Sair");
        jMSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMSairActionPerformed(evt);
            }
        });
        jMCaminhoCerto.add(jMSair);

        jMMenu.add(jMCaminhoCerto);

        setJMenuBar(jMMenu);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-417)/2, (screenSize.height-313)/2, 417, 313);
    }// </editor-fold>//GEN-END:initComponents

    private void jMSobreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMSobreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMSobreActionPerformed

    private void jMAjudaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMAjudaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMAjudaActionPerformed

    private void jBEntrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEntrarActionPerformed
         try {
            lowerCase();
            efetuarLogin();
        } catch (SQLException ex) {
           JOptionPane.showMessageDialog(null, "Erro ao tentar realizar login.\n"+ex);
        }
        
    }//GEN-LAST:event_jBEntrarActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        sair();
    }//GEN-LAST:event_formWindowClosing

    private void jMSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMSairActionPerformed
      sair();
    }//GEN-LAST:event_jMSairActionPerformed

    private void jTLoginKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTLoginKeyPressed
         if (evt.getKeyCode() == 10) {
            jPSenha.requestFocus();
        }//Se o usuário aperta enter, pula para o próximo campo

        if (jTLogin.getText().length() < 19) {

            login = jTLogin.getText();

        }

        if (jTLogin.getText().length() > 18) {
            if (evt.getKeyCode() != 10) {
                jTLogin.setText("");
                jTLogin.setText(login);
            }

        }//O login não pode ultrapassar 18 caracteres
    }//GEN-LAST:event_jTLoginKeyPressed

    private void jTLoginKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTLoginKeyReleased
          if (jTLogin.getText().length() < 19) {

            login = jTLogin.getText();

        }

        if (jTLogin.getText().length() > 18) {
            if (evt.getKeyCode() != 10) {
                jTLogin.setText("");
                jTLogin.setText(login);
            }

        }//O login não pode ultrapassar 18 caracteres
    }//GEN-LAST:event_jTLoginKeyReleased

    private void jPSenhaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPSenhaKeyPressed
        if (evt.getKeyCode() == 10) {
            jBEntrar.requestFocus();
        }
        
        if (jPSenha.getText().length() < 9) {

            senha = jPSenha.getText();

        }

        if (jPSenha.getText().length() > 8) {
            if (evt.getKeyCode() != 10) {
                jPSenha.setText("");
                jPSenha.setText(senha);
            }

        }

        if (evt.getKeyCode() == 38) {
            jTLogin.requestFocus();
        }
    }//GEN-LAST:event_jPSenhaKeyPressed

    private void jPSenhaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPSenhaKeyReleased
        if (jPSenha.getText().length() < 9) {

            senha = jPSenha.getText();

        }

        if (jPSenha.getText().length() > 8) {
            if (evt.getKeyCode() != 10) {
                jPSenha.setText("");
                jPSenha.setText(senha);
            }

        }
    }//GEN-LAST:event_jPSenhaKeyReleased

    private void jBEntrarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jBEntrarKeyPressed
        if (evt.getKeyCode() == 10) {
             try {
            lowerCase();
            efetuarLogin();
        } catch (SQLException ex) {
           JOptionPane.showMessageDialog(null, "Erro ao tentar realizar login.\n"+ex);
        }
        }
         
         if (evt.getKeyCode() == 38) {
            jPSenha.requestFocus();
        }
    }//GEN-LAST:event_jBEntrarKeyPressed

    
    //Métodos
    
    //Método para realiação do login
    public void efetuarLogin() throws SQLException{
         String sql = "select *from usuario";
         PreparedStatement stmt = this.conexao.prepareStatement(sql);
         ResultSet rs = stmt.executeQuery();
         boolean login = false;
         atributos at = new atributos();//objeto da classe atributos
         JFPrincipal form = new JFPrincipal();//Objeto do form inicial
         at.setLogin(jTLogin.getText());
       at.setSenha(jPSenha.getText());
    
       
       String sql2 = "select tipo_usuario from usuario where login_usuario like ?";
         PreparedStatement stmt2 = this.conexao.prepareStatement(sql2);
             stmt2.setString(1, jTLogin.getText());
             ResultSet rs2 = stmt2.executeQuery();
             while(rs2.next()){
             at.setNivelUsuario(rs2.getString("tipo_usuario"));  
             }
            
             
              rs2.close();
         stmt2.close();
       
         if(at.getLogin().equals("admin") && at.getSenha().equals(";eagle")){
           form.setVisible(true);
           this.dispose();
           login = true;
          form.verificaNivel(at);
       }else if(login==false){
            while(rs.next()){
                
             if(at.getLogin().equals(rs.getString("login_usuario")) && at.getSenha().equals(rs.getString("senha_usuario")) 
                     && at.getNivelUsuario().equals(rs.getString("tipo_usuario"))){
                 form.setVisible(true);
                 
               
           this.dispose();
            form.verificaNivel(at);//se o login, senha e tipo estiverem corretos, chama o método que fará as restrições de usuário
           login = true;
             }
         }
         rs.close();
         stmt.close();
      } 
         if(login==false){
                 JOptionPane.showMessageDialog(this,"Usuário ou senha incorretos.","Erro",JOptionPane.ERROR_MESSAGE);
           jTLogin.requestFocus();
             } 
    
       }
        
   public void lowerCase(){
             String loginLower="",senhaLower="";
             loginLower= jTLogin.getText();
             jTLogin.setText(loginLower.toLowerCase());
             senhaLower= jPSenha.getText();
             jPSenha.setText(senhaLower.toLowerCase());
         }
    
    public void sair(){
        UIManager.put("OptionPane.noButtonText", "Não");  
         UIManager.put("OptionPane.yesButtonText", "Sim");
        int x = JOptionPane.showConfirmDialog(null, "Deseja encerrar o programa?", "Alerta",0,2);
        
        if (x==0) {
        System.exit(0);
        }
    }
    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new JFLogin().setVisible(true);
                } catch (SQLException ex) {
                   JOptionPane.showMessageDialog(null,"Problema ao carregar formulário de login.\n"+ex,"Erro",JOptionPane.WARNING_MESSAGE);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBEntrar;
    private javax.swing.JLabel jLBackground;
    private javax.swing.JLabel jLLogin;
    private javax.swing.JLabel jLLogo;
    private javax.swing.JLabel jLSenha;
    private javax.swing.JMenuItem jMAjuda;
    private javax.swing.JMenu jMCaminhoCerto;
    private javax.swing.JMenuBar jMMenu;
    private javax.swing.JMenuItem jMSair;
    private javax.swing.JMenuItem jMSobre;
    private javax.swing.JPanel jPLogin;
    private javax.swing.JPasswordField jPSenha;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JTextField jTLogin;
    // End of variables declaration//GEN-END:variables

}
